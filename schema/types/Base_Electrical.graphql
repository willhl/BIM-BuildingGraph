
 type DBPanel implements AbstractElement {
  Name: String
  Id: ID!
  "Group: DB Panel, Units: N/A, Notes: "
  Phase_Configuration: String
  "Group: DB Panel, Units: N/A, Notes: "
  Number_of_Ways: Int
  "Group: DB Panel, Units: N/A, Notes: "
  Panel_Name: String
  "Group: DB Panel, Units: N/A, Notes: "
  Distribution_System: String
  "Group: DB Panel, Units: N/A, Notes: "
  Location: String
  "Group: DB Panel, Units: A, Notes: "
  Maximum_Continuous_Current_Rating: Float
  "Group: DB Panel, Units: A, Notes: "
  Isolator_Rating: Float
  "Group: DB Panel, Units: N/A, Notes: "
  Number_of_Poles: Float
  "Group: DB Panel, Units: kA, Notes: "
  Isolator_ICS: Float
  ElementType: ElementType @relation(name:"IS_OF",direction:OUT)
  ModelElements: [ModelElement] @relation(name:"REALIZED_BY",direction:OUT)
  Space: Space @relation(name:"IS_IN_SPACE",direction:OUT)
  Level: Level @relation(name:"IS_ON",direction:OUT)
  OutgoingCircuits: [Circuit] @relation(name:"ELECTRICAL_FLOW_TO",direction:OUT)
  IncommingCircuit: Circuit @relation(name:"ELECTRICAL_FLOW_TO",direction:IN)
}

type Circuit implements AbstractElement {
  Name: String
  Id: ID!
  Apparent_Current: Float
  Apparent_Current_Phase_A: Float 
  Apparent_Current_Phase_B: Float 
  Apparent_Current_Phase_C: Float 
  Apparent_Load: Float 
  Apparent_Load_Phase_A: String 
  Apparent_Load_Phase_B: String 
  Apparent_Load_Phase_C: String 
  Length: Float
  Schedule_Circuit_Notes: String 
  System_Type: String 
  True_Current: Float
  True_Current_Phase_A: Float
  True_Current_Phase_B: Float 
  True_Current_Phase_C: Float 
  True_Load: Float
  True_Load_Phase_A: Float
  True_Load_Phase_B: Float 
  True_Load_Phase_C: Float 
  Type: String 
  "Group: Circuit Protective Device, Units: Int, Notes: "
  Circuit_Way: Int
  "Group: Circuit Protective Device, Units: N/A, Notes: "
  Circuit_Phase: String
  "Group: Circuit Protective Device, Units: N/A, Notes: "
  Circuit_Protective_Device_Type: String
  "Group: Circuit Protective Device, Units: N/A, Notes: "
  Time_Current_Curve_Characteristic: String
  "Group: Circuit Protective Device, Units: A, Notes: "
  Circuit_Protective_Device_Rating: Float
  "Group: Circuit Protective Device, Units: mA, Notes: "
  RCD_Trip_Current: Float
  "Group: Circuit Protective Device, Units: N/A, Notes: "
  Circuit_Protective_Device_Fault_Current_Breaking_Capacity: String
  "Group: Circuit Protective Device, Units: INt, Notes: "
  Circuit_Protective_Device_Switched_Poles: Int
  "Group: Load, Units: N/A, Notes: "
  Load_Classification: String
  "Group: Load, Units: yes/No, Notes: "
  Ring_or_Radial: Int
  "Group: Phase Conductors, Units: mm2, Notes: "
  Cable_Size: Float
  "Group: Phase Conductors, Units: Int, Notes: "
  Phase_Conductor_Per_Phase: Int
  "Group: Phase Conductors, Units: Int, Notes: "
  Phase_Conductor_Neutral: Int
  "Group: Phase Conductors, Units: N/A, Notes: "
  Installation_Method: String
  "Group: Phase Conductors, Units: N/A, Notes: "
  Cable_Formation_Flat: String
  "Group: Phase Conductors, Units: N/A, Notes: "
  Cable_Formation_Trefoil: String
  "Group: Phase Conductors, Units: N/A, Notes: "
  Cable_Formation_Quadfoil: String
  "Group: Phase Conductors, Units: N/A, Notes: "
  Cable_Diameter_Overall_Spacing: String
  "Group: Phase Conductors, Units: N/A, Notes: "
  Circuit_Description: String
  "Group: CPC, Units: N/A, Notes: "
   CPC_Armour: String
  "Group: CPC, Units: N/A, Notes: "
  CPC_Integral_Separate_or_Supplementary: String
  "Group: CPC, Units: mm2, Notes: "
  CPC_Size: Float

  ElementType: ElementType @relation(name:"IS_OF",direction:OUT)
  ModelElements: [ModelElement] @relation(name:"REALIZED_BY",direction:OUT)
  Panel: DBPanel @relation(name:"ELECTRICAL_FLOW_TO",direction:IN)
  Loads: [ElectricalLoad] @relation(name:"ELECTRICAL_FLOW_TO",direction:OUT)
}

type ElectricalLoad implements AbstractElement {
  Name: String
  Id: ID!
  ElementType: ElementType @relation(name:"IS_OF",direction:OUT)
  ModelElements: [ModelElement] @relation(name:"REALIZED_BY",direction:OUT)
  DBID: String @cypher(statement:"MATCH (this) RETURN id(this)")
  Apparent_Load: Float
  Area: Float
  Circuit_Number: String
  Current: Float
  Design_Option: Int
  Edited_by: String
  Electrical_Data: String
  Elevation: Float
  Family: String
  Family_and_Type: String
  HasSensors: Boolean
  Host: String
  Host_Id: Int
  Image: String
  Label_Visible: Boolean
  Lateral_Offset: Float
  Lateral_Offset_Formula: Float
  LocationX: Float
  LocationY: Float
  LocationZ: Float
  Mark: String
  Phase_Created: String
  Phase_Demolished: String
  Power_Factor: Float
  RCD_Trip_Current: Float
  RLX_RlxInstId: Int
  Type: String
  Type_Id: Int
  Vertical_Offset: Float
  Volume: Float
  Workset: Int
  Category: String
  Space: Space @relation(name:"IS_IN_SPACE",direction:OUT)
  Level: Level @relation(name:"IS_ON",direction:OUT)
  Circuit: Circuit @relation(name:"ELECTRICAL_FLOW_TO",direction:IN)
}

type Lighting implements AbstractElement {
  Name: String
  Id: ID!
  ElementType: ElementType @relation(name:"IS_OF",direction:OUT)
  ModelElements: [ModelElement] @relation(name:"REALIZED_BY",direction:OUT)
  Space: Space @relation(name:"IS_IN_SPACE",direction:OUT)
}

type FireAlarm implements AbstractElement {
  Name: String
  Id: ID!
  ElementType: ElementType @relation(name:"IS_OF",direction:OUT)
  ModelElements: [ModelElement] @relation(name:"REALIZED_BY",direction:OUT)
  Space: Space @relation(name:"IS_IN_SPACE",direction:OUT)
}

type Security implements AbstractElement {
  Name: String
  Id: ID!
  ElementType: ElementType @relation(name:"IS_OF",direction:OUT)
  ModelElements: [ModelElement] @relation(name:"REALIZED_BY",direction:OUT)
  Space: Space @relation(name:"IS_IN_SPACE",direction:OUT)
}

type Safety implements AbstractElement {
  Name: String
  Id: ID!
  ElementType: ElementType @relation(name:"IS_OF",direction:OUT)
  ModelElements: [ModelElement] @relation(name:"REALIZED_BY",direction:OUT)
  Space: Space @relation(name:"IS_IN_SPACE",direction:OUT)
}

type Data implements AbstractElement {
  Name: String
  Id: ID!
  ElementType: ElementType @relation(name:"IS_OF",direction:OUT)
  ModelElements: [ModelElement] @relation(name:"REALIZED_BY",direction:OUT)
  Space: Space @relation(name:"IS_IN_SPACE",direction:OUT)
}


type Space {
  ElectricalLoadElements: [ElectricalLoad] @relation(name:"IS_IN_SPACE",direction:IN)
  LightingElements: [Lighting] @relation(name:"IS_IN_SPACE",direction:IN)
  FireAlarmElements: [FireAlarm] @relation(name:"IS_IN_SPACE",direction:IN)
  SecurityElements: [Security] @relation(name:"IS_IN_SPACE",direction:IN)
  SafetyElements: [Safety] @relation(name:"IS_IN_SPACE",direction:IN)
  DataElements: [Data] @relation(name:"IS_IN_SPACE",direction:IN)
  DBPanelElements: [DBPanel] @relation(name:"IS_IN_SPACE",direction:IN)
}


